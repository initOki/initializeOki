---
import ScrollToId from '../../utils/ScrollToId.astro';
---

<div class="mb-[20px]">
  <p>일반적인 방식</p>
  <button id="Click1">button</button>
</div>

<div class="mb-[30px]">
  <p>RxJS를 사용한 방식</p>
  <button id="Click2">button</button>
</div>

<div class="divider"></div>

<div class="mb-[20px]">
  <h6>
    <ScrollToId item="purity">Purity</ScrollToId>
  </h6>
  <p>Normal Button</p>
  <button id="NormalCountButton">button</button>
</div>

<div>
  <p>RxJS Button</p>
  <button id="RxJSCountButton">button</button>
</div>

<div class="divider"></div>

<div class="mb-[20px]">
  <h6>
    <ScrollToId item="flow">Flow</ScrollToId>
  </h6>
  <p>Normal Button</p>
  <button id="NormalFlowButton">button</button>
</div>

<div>
  <p>RxJS Button</p>
  <button id="RxJSFlowButton">button</button>
</div>

<div class="divider"></div>

<div class="mb-[20px]">
  <h6>
    <ScrollToId item="values">Values</ScrollToId>
  </h6>
  <p>Normal Button</p>
  <button id="NormalValuesButton">button</button>
</div>

<div>
  <p>RxJS Button</p>
  <button id="RxJSValuesButton">button</button>
</div>

<script>
  import { toast } from 'sonner';
  import { fromEvent, scan, throttleTime } from 'rxjs';

  const click1 = document.querySelector('#Click1');
  click1.addEventListener('click', () => toast.success('HI'));

  const click2 = document.querySelector('#Click2');
  fromEvent(click2, 'click').subscribe(() => toast.success('RxJS!'));
</script>

<script>
  import { fromEvent, scan, throttleTime } from 'rxjs';
  import { toast } from 'sonner';

  // Purity
  const normalCountButton = document.querySelector('#NormalCountButton');
  let count = 0;
  normalCountButton.addEventListener('click', () => toast.success(`Clicked ${++count} times`));

  const RxJSCountButton = document.querySelector('#RxJSCountButton');
  fromEvent(RxJSCountButton, 'click')
    .pipe(scan((count) => count + 1, 0))
    .subscribe((count) => toast.success(`Clicked ${count} times`));
</script>

<script>
  import { fromEvent, scan, throttleTime } from 'rxjs';
  import { toast } from 'sonner';

  // Flow
  const normalFlowButton = document.querySelector('#NormalFlowButton');
  let count2 = 0;
  const rate = 1000;
  let lastClick = Date.now() - rate;
  normalFlowButton.addEventListener('click', () => {
    if (Date.now() - lastClick >= rate) {
      toast.success(`Click ${++count2} times`);
      lastClick = Date.now();
    }
  });

  const RxJSFlowButton = document.querySelector('#RxJSFlowButton');
  fromEvent(RxJSFlowButton, 'click')
    .pipe(
      throttleTime(rate),
      scan((count) => count + 1, 0),
    )
    .subscribe((count2) => toast.success(`Click ${count2} times`));
</script>

<script>
  import { fromEvent, throttleTime, map, scan } from 'rxjs';
  import { toast } from 'sonner';

  // Values
  const normalValuesButton = document.querySelector('#NormalValuesButton');
  let count = 0;
  const rate = 1000;
  let lastClick = Date.now() - rate;
  normalValuesButton.addEventListener('click', (event) => {
    if (Date.now() - lastClick >= rate) {
      count += event.clientX;
      toast.success(count, event.clientX);
      lastClick = Date.now();
    }
  });

  const RxJSValuesButton = document.querySelector('#RxJSValuesButton');
  fromEvent(RxJSValuesButton, 'click')
    .pipe(
      throttleTime(1000),
      map((event) => event.clientX),
      scan((count, clientX) => count + clientX, 0),
    )
    .subscribe((count) => toast.success(count));
</script>

<style>
  h6 {
    font-weight: bold;
  }

  p {
    font-size: 16px;
  }

  div.divider {
    width: 100%;
    height: 1px;
    margin: 20px 0;
    background-color: #4b4b4b;
  }

  button {
    margin-top: 5px;
    background-color: #1a4a83;
    border-radius: 6px;
    padding: 5px 15px;
    font-size: 14px;
    color: #ffffff;
  }
</style>
