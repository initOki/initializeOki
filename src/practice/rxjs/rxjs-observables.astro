---
export const prerender = false;
---

<div class="mb-[30px]">
  <h2>RxJS Observables</h2>
  <p>Click the button to subscribe to an observable and display the values.</p>
  <button id="ObservableButton" class="default-button">Subscribe</button>
</div>

<div class="mb-[30px]">
  <h2>Observables as generalizations of functions</h2>
  <button id="ObservableX" class="default-button">X Button</button>
  <button id="ObservableY" class="default-button">Y Button</button>
</div>

<script>
  if (!window || !document) return;
  import { Observable } from 'rxjs';
  import { toast } from 'sonner';

  const observable = new Observable((subscriber) => {
    subscriber.next(1);
    subscriber.next(2);
    subscriber.next(3);
    setTimeout(() => {
      subscriber.next(4);
      subscriber.complete();
    }, 1000);
  });

  const handleClick = () => {
    observable.subscribe({
      next(x) {
        toast.success('got value ' + x);
      },
      error(err) {
        toast.error('something wrong occurred: ' + err);
      },
      complete() {
        toast.success('done');
      },
    });
  };

  const button = document.getElementById('ObservableButton');
  button?.addEventListener('click', handleClick);
</script>

<script>
  if (!window || !document) return;
  import { Observable } from 'rxjs';
  import { toast } from 'sonner';

  const xButton = document.getElementById('ObservableX');
  const yButton = document.getElementById('ObservableY');

  const foo = new Observable((subscriber) => {
    toast.success('Hello');
    subscriber.next(42);
  });

  const handleClickXButton = () => {
    foo.subscribe((x: number) => {
      toast.success(x);
    });
  };

  const handleClickYButton = () => {
    foo.subscribe((y: number) => {
      toast.success(y);
    });
  };

  xButton?.addEventListener('click', handleClickXButton);
  yButton?.addEventListener('click', handleClickYButton);
</script>

<style></style>
